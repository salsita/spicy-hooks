name: Build, test and release to NPM

on:
  push:
    tags:
      - v[0-9]*

jobs:

  deploy:
    name: Build, test and release to NPM
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v2

      - name: Setup variables
        run: |
          GITHUB_TAG=$(echo ${GITHUB_REF} | awk -F '/' '{print $3}')
          VERSION=$(echo ${GITHUB_TAG} | sed -e s/^v//)
          VERSION_TAG=$(echo ${VERSION} | egrep -o '^[0-9\.]+-[a-z]+[0-9\.]*$' | egrep -o [a-z]+ | cat)

          echo "GITHUB_TAG=$GITHUB_TAG" >> $GITHUB_ENV
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "VERSION_TAG=$VERSION_TAG" >> $GITHUB_ENV

      - name: Install Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Yarn install
        run: yarn --frozen-lockfile

      - name: Yarn build
        run: yarn build

      - name: Check `package.json` versions
        run: yarn spicy check-version $VERSION

      - name: Test
        run: yarn test

      - name: Build Typedoc
        run: yarn typedoc --gitRevision $GITHUB_TAG --name "@spicy-hooks $GITHUB_TAG"

      - name: Redirect references to proper tag
        run: yarn redirect-refs

      - name: Install awscli
        run: sudo pip install awscli

      - name: Deploy Typedoc to S3
        env:
          AWS_TYPEDOC_BUCKET: ${{ secrets.AWS_TYPEDOC_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        run: |
          echo "Uploading documentation to S3..."
          aws s3 cp --recursive typedoc/ "s3://$AWS_TYPEDOC_BUCKET/$GITHUB_TAG/"
          echo "Documentation deployed to https://spicy-hooks.salsita.co/$GITHUB_TAG/"

      - name: Initiate NPM credentials
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

      - name: Publish `utils` package
        working-directory: ./packages/utils
        run: npm publish --access public --tag ${VERSION_TAG:=latest}

      - name: Publish `core` package
        working-directory: ./packages/core
        run: npm publish --access public --tag ${VERSION_TAG:=latest}

      - name: Publish `observables` package
        working-directory: ./packages/observables
        run: npm publish --access public --tag ${VERSION_TAG:=latest}

      - name: Publish `bin` package
        working-directory: ./packages/bin
        run: npm publish --access public --tag ${VERSION_TAG:=latest}
